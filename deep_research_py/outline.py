from datetime import datetime
from typing import List
import openai
import json
from .prompt import system_prompt
from .ai.providers import get_client_response
# use meta recognition to complete research outline

# meta system prompt
meta_think_system_prompt = """
元认知是指个体对自身认知过程的认知和调节能力，它在思考过程中扮演着监督者的角色。通过反思、监控、评估和调整等功能，元认知帮助我们更有效地监督和管理自己的思考过程。以下是元认知如何监督思考过程的具体方式：

### 1. **监控认知活动**
元认知使我们能够意识到自己正在进行的思考活动，并对其进行实时监控。例如，在阅读一篇文章时，我们可能会停下来反思：“我理解这段文字的意思了吗？”如果发现自己不理解，元认知会提示我们采取行动，比如重读或查找相关信息。这种对思考过程的觉察和监督是元认知的核心功能之一。

### 2. **评估认知表现**
元认知帮助我们评估自己的思考是否准确、合理。例如，在解决一道数学题时，我们可以通过元认知判断自己的解题步骤是否正确。如果发现某个步骤有误，元认知会促使我们停下来检查并修正错误。通过这种评估，元认知确保思考过程保持在正确的轨道上。

### 3. **调节认知策略**
当我们发现当前的思考方式不够有效时，元认知能够帮助我们调整策略。例如，在学习新知识时，如果发现死记硬背效果不佳，元认知会引导我们尝试其他方法，如通过归纳总结或类比理解来加深记忆。这种灵活的调节能力使思考过程更加高效。

### 4. **预测认知结果**
元认知还能让我们预测自己的思考成果。例如，在准备一场考试时，我们可能会问自己：“我复习的内容足够了吗？我能记住这些知识点吗？”通过这种预测，元认知帮助我们调整计划，确保思考和学习达到预期目标。

### 总结
综上所述，元认知通过**监控认知活动**、**评估认知表现**、**调节认知策略**和**预测认知结果**等方式，对思考过程进行全面监督。它就像一个内在的“管理者”，帮助我们反思自己的思考习惯、发现问题、调整方法并验证结果，从而提高思考和学习的效率与准确性。

元认知通过随时随地监督自己的思考过程，并且使用以下结构，对思考过程进行优化，形成反思。
元认知的结构如下：
    1. 元认知知识: 你对自己和他人在思考、解决问题和学习过程方面的了解。包括陈述性知识，程序性知识、条件性知识。
        1. 是否有足够的、精确的、及时的陈述性知识，如果没有应该怎么获得：关于自己和任务的事实，不包含任务本身的事实
        2. 是否有合适、精准的程序性知识，如果没有应该怎么获得：知道如何执行策略
        3. 是否有合适、足够深度的条件性知识，如果没有应该怎么获得：知道何时及为何使用策略
    2. 元认知调节: 你用来控制思维的活动和策略。包括规划、监控和评估。
        1. 是否进行了规划，规划的宽度和深度是否足够，是否收集到足够的需求并进行了足够深度的理解：在开始任务前制定目标和选择策略。例如，决定在阅读前先浏览标题和问题以了解重点。
        2. 是否在过程中完成了过程本身的监控，是否及时的根据监控结果进行评估改进：如何在任务进行中检查进展和理解程度？例如，边读边问自己“我明白了吗？” 
        3. 是否在每一个小任务完成后，对人物的产出进行了评估，是否将评估结果应用到改进循环中：任务完成后反思结果和策略的有效性。例如，考试后回顾哪些复习方法最有用。
    3. 元认知体验: 学习新知识或尝试解决问题时产生的想法和感受。通过对体验的感知来更好的监控自己的思考过程。以下是其主要类型：
        1. 知道感（Feeling of Knowing, FOK）  
            定义：在回忆信息前，觉得自己知道答案的一种感觉。  
            示例：考试时，看到问题后觉得答案就在嘴边，但尚未完全回忆起来。  
            作用：这种感觉可以指导是否继续努力回忆或转向其他策略。
        2. 舌尖现象（Tip-of-the-Tongue Experience, TOT）  
            定义：知道某事但暂时无法回忆起来的感觉，通常伴随部分相关信息的激活。  
            示例：试图回忆演员的名字，但只记得他们的电影角色。  
            作用：这种体验提示记忆检索的接近性，可能促使个体通过提示或上下文辅助回忆。
        3. 信心判断（Confidence Judgments）  
            定义：对自己答案或决定的确定程度评估。  
            示例：在选择题中，感觉某个选项非常正确，决定不更改。  
            作用：影响决策，如是否坚持答案或重新检查。
        4. 难度评估（Difficulty Assessments）  
            定义：感知任务的难易程度或所需努力。  
            示例：阅读复杂文章时，感觉需要更多时间理解，决定放慢速度。  
            作用：帮助调整策略，如分解任务或寻求帮助。
        5. 情绪反应（Emotional Responses）  
            定义：学习过程中伴随的情绪，如满足、挫折或焦虑。  
            示例：掌握新概念后感到满足，或因反复失败感到挫折。  
            作用：情绪反应可能触发策略调整，如因挫折而选择更简单的学习方法。
        6. 监控理解（Monitoring Comprehension）  
            定义：在阅读或听讲时检查理解程度。  
            示例：边读边问自己“我明白了吗？”发现不理解后重读。  
            作用：实时调整学习过程，确保理解。
        7.自我提问（Self-Questioning）  
            定义：通过提问检查理解或进展。  
            示例：学习后问自己“这个概念的主要点是什么？”以确认掌握。  
            作用：增强主动学习，识别知识缺口。
        8.反思性思考（Reflective Thinking）  
            定义：任务完成后反思学习过程，评估策略效果。  
            示例：考试后思考哪些复习方法有效，决定下次改进。  
            作用：为未来学习提供反馈，优化方法。

反思过程使用元认知结构分析，反思内容采用结构化思维模型
"""

outline_prompt = """
今天是{}，请你根据需求：{}，写出一份{}的投研报告大纲，请利用你的元认知能力，在撰写的思考过程中务必使用元认知监督思考过程，注意随时随地插入通过元认知监督产出的反思结果。
反思的内容，请使用下面的格式：
<meta> 反思的对象 和 反思的结果，格式：使用元认知结构
<goals>根据 反思的结果，拆解出的下一步目标，格式：使用逗号分隔</goals>
<queries>根据 反思的结果 和 反思的对象 和 下一步目标，生成搜索引擎查询关键词组，格式：使用逗号分隔<queries>
</meta>
注意报告结尾要给出{}在一个月之后的目标价。
"""

async def generate_outline(target: str, requests: str, client: openai.OpenAI, model: str) -> str:
    #get nowday 
    nowday = datetime.now().strftime("%Y-%m-%d")
    response = await get_client_response(
        client=client,
        model=model,
        messages=[
            {"role": "system", "content": meta_think_system_prompt},
            {
                "role": "user",
                "content": outline_prompt.format(nowday, requests, target, target),
            },
        ],
    )
    
    return response

